@model EmergencyInformationSystem.Models.Domains.Entities.ObserveRoomInfo

@{
    ViewBag.Title = "留观室病例信息表 - 编辑";
}

@*面包屑区*@
<div class="container">
    <ol class="breadcrumb">
        <li>@Html.ActionLink("主界面", "Index", "Home", null, new { @class = "btn-show-modal" })</li>
        <li>@Html.ActionLink("留观室病例信息一览表", "Index", null, new { @class = "btn-show-modal" })</li>
        <li>@Html.ActionLink("留观室病例信息表", "Details", new { id = Model.ObserveRoomInfoId }, new { @class = "btn-show-modal" })</li>
        <li class="active">编辑</li>
    </ol>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(false, "", new { @class = "text-danger alert-danger" })

    @Html.HiddenFor(model => model.ObserveRoomInfoId)
    @Html.HiddenFor(model => model.OutPatientNumber)
    @Html.HiddenFor(model => model.TimeStamp)

    <div class="container">
        @*标题*@
        <div class="row ObserveRoomMainTitleRow">
            <div class="h2 ObserveRoomMainTitleCell">
                @ViewBag.Title
            </div>
        </div>

        @*眉栏*@
        @Html.Action("Header", new { id = Model.ObserveRoomInfoId })

        <hr />

        @*入室*@
        <div class="row ObserveRoomSecondTitleRow">
            <div class="col-md-12 ObserveRoomSecondTitle">
                入室
            </div>

            <div class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.InDepartmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input name="InDepartmentTime" id="InDepartmentTime" type="datetime-local" class="form-control" value="@(Model.InDepartmentTime.ToString("yyyy-MM-ddTHH:mm"))" />
                    @Html.ValidationMessageFor(model => model.InDepartmentTime, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="默认为接诊日期0点">！</button>
                    <button type="button" class="btn btn-default btn-set-time-now" data-toggle="tooltip" data-placement="top" title="设置为当前时间" data-for-set-time-now="InDepartmentTime">现在</button>
                </div>
            </div>

            <div class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.BedId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("BedId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BedId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="若原为旧床位，将会被覆盖">！</button>
                </div>
            </div>

            <div class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.FirstNurseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstNurseName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstNurseName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="可用工号">！</button>
                </div>
            </div>

            <div class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.InObserveRoomWayId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("InObserveRoomWayId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InObserveRoomWayId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="DivInObserveRoomWayRemarks" hidden="hidden" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.InObserveRoomWayRemarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InObserveRoomWayRemarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InObserveRoomWayRemarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        @*预约*@
        <div class="row ObserveRoomSecondTitleRow">
            <div class="col-md-12 ObserveRoomSecondTitle">
                预约
            </div>

            <div class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.DestinationFirstId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DestinationFirstId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DestinationFirstId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="DivDestinationFirstTime" hidden="hidden" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.DestinationFirstTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input name="DestinationFirstTime" id="DestinationFirstTime" type="datetime-local" class="form-control" value="@(Model.DestinationFirstTime?.ToString("yyyy-MM-ddTHH:mm"))" />
                    @Html.ValidationMessageFor(model => model.DestinationFirstTime, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-default btn-set-time-now" data-toggle="tooltip" data-placement="top" title="设置为当前时间" data-for-set-time-now="DestinationFirstTime">现在</button>
                </div>
            </div>

            <div id="DivDestinationFirstContact" hidden="hidden" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.DestinationFirstContact, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.DestinationFirstContact, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DestinationFirstContact, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="可用工号">！</button>
                </div>
            </div>

            <div id="DivDestinationSecondId" hidden="hidden" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.DestinationSecondId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DestinationSecondId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DestinationSecondId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        @*离室*@
        <div class="row ObserveRoomSecondTitleRow">
            <div class="col-md-12 RescueRoomSecondTitle">
                离室
            </div>

            <div class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.DestinationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DestinationId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DestinationId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="DivDestinationRemarks" hidden="hidden" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.DestinationRemarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DestinationRemarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DestinationRemarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="DivTransferReasonId" class="form-group col-md-offset-1 row RescueRoomSecondTitleEditBlock" hidden="hidden">
                @Html.LabelFor(model => model.TransferReasonId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TransferReasonId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TransferReasonId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="DivTransferTarget" class="form-group col-md-offset-1 row RescueRoomSecondTitleEditBlock" hidden="hidden">
                @Html.LabelFor(model => model.TransferTarget, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TransferTarget, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TransferTarget, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="DivOutDepartmentTime" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.OutDepartmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input name="OutDepartmentTime" id="OutDepartmentTime" type="datetime-local" class="form-control" value="@(Model.OutDepartmentTime?.ToString("yyyy-MM-ddTHH:mm"))" />
                    @Html.ValidationMessageFor(model => model.OutDepartmentTime, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-default btn-set-time-now" data-toggle="tooltip" data-placement="top" title="设置为当前时间" data-for-set-time-now="OutDepartmentTime">现在</button>
                </div>
            </div>            

            <div id="DivHandleNurse" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.HandleNurse, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.HandleNurse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HandleNurse, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="可用工号">！</button>
                </div>
            </div>

            <div id="DivDiagnosisName" class="form-group col-md-offset-1 row ObserveRoomSecondTitleEditBlock">
                @Html.LabelFor(model => model.DiagnosisName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DiagnosisName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiagnosisName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group ObserveRoomSecondTitleSubmitBlock">
            <div class="col-md-offset-1 col-md-9">
                <input type="submit" value="确定" class="btn btn-info btn-show-modal" />
                @Html.ActionLink("返回", "Details", new { id = Model.ObserveRoomInfoId }, new { @class = "btn btn-info btn-show-modal" })
            </div>
        </div>
    </div>
}

@section scripts{
    @Scripts.Render("~/bundles/EisNormal")
}

<script>
    $(document).ready(function () {
        //==动态组==
        $(function () {
            //基于“入室方式”而改变的
            onchangeForInObserveRoomWayId();
            $("#InObserveRoomWayId").on("change", function () {
                onchangeForInObserveRoomWayId();
            });

            //基于“预约首选科室”而改变的
            onchangeForDestinationFirstId();
            $("#DestinationFirstId").on("change", function () {
                onchangeForDestinationFirstId();
            });

            //基于“去向”而改变的
            onchangeForDestinationId();
            $("#DestinationId").on("change", function () {
                onchangeForDestinationId();
            });
        });
    });








    //“InObserveRoomWayId”改变
    function onchangeForInObserveRoomWayId() {
        eisOnchangeUseJson('@Url.Action("CheckInObserveRoomWayIdForIsHasAdditionalInfo")', "InObserveRoomWayId", checkInObserveRoomWayIdForIsHasAdditionalInfoTrue, checkInObserveRoomWayIdForIsHasAdditionalInfoFalse)
    }
    function checkInObserveRoomWayIdForIsHasAdditionalInfoTrue() {
        //影响“InObserveRoomWayRemarks”
        $("#DivInObserveRoomWayRemarks").show(10, null);
        $("#InObserveRoomWayRemarks").removeAttr("disabled");
    }
    function checkInObserveRoomWayIdForIsHasAdditionalInfoFalse() {
        //影响“InObserveRoomWayRemarks”
        $("#DivInObserveRoomWayRemarks").hide(10, null);
        $("#InObserveRoomWayRemarks").attr("disabled", "disabled");
    }

    //“DestinationFirstId”改变
    function onchangeForDestinationFirstId() {
        eisOnchangeUseJson('@Url.Action("CheckDestinationFirstIdForIsUseForEmpty")', "DestinationFirstId", checkDestinationFirstIdForIsUseForEmptyTrue, checkDestinationFirstIdForIsUseForEmptyFalse)
    }
    function checkDestinationFirstIdForIsUseForEmptyTrue() {
        //影响“DestinationFirstTime”、“DestinationFirstContact”、“DestinationSecondId”
        $("#DivDestinationFirstTime").hide(10, null);
        $("#DivDestinationFirstContact").hide(10, null);
        $("#DivDestinationSecondId").hide(10, null);

        $("#DestinationFirstTime").attr("disabled", "disabled");
        $("#DestinationFirstContact").attr("disabled", "disabled");

        $("#DestinationSecondId").val($("#DestinationFirstId").val().toString());
    }
    function checkDestinationFirstIdForIsUseForEmptyFalse() {
        //影响“DestinationFirstTime”、“DestinationFirstContact”、“DestinationSecondId”
        $("#DivDestinationFirstTime").show(10, null);
        $("#DivDestinationFirstContact").show(10, null);
        $("#DivDestinationSecondId").show(10, null);

        $("#DestinationFirstTime").removeAttr("disabled");
        $("#DestinationFirstContact").removeAttr("disabled");
    }

    //“DestinationId”改变
    function onchangeForDestinationId() {
        eisOnchangeUseJson('@Url.Action("CheckDestinationIdForIsHasAdditionalInfo")', "DestinationId", checkDestinationIdForIsHasAdditionalInfoTrue, checkDestinationIdForIsHasAdditionalInfoFalse);

        eisOnchangeUseJson('@Url.Action("CheckDestinationIdForIsUseForEmpty")', "DestinationId", checkDestinationIdForIsUseForEmptyTrue, checkDestinationIdForIsUseForEmptyFalse);

        eisOnchangeUseJson('@Url.Action("CheckDestinationIdForIsTransfer")', "DestinationId", checkDestinationIdForIsTransferTrue, checkDestinationIdForIsTransferFalse);
    }
    function checkDestinationIdForIsHasAdditionalInfoTrue() {
        //影响“DestinationRemarks”
        $("#DivDestinationRemarks").show(10, null);
        $("#DestinationRemarks").removeAttr("disabled");
    }
    function checkDestinationIdForIsHasAdditionalInfoFalse() {
        //影响“DestinationRemarks”
        $("#DivDestinationRemarks").hide(10, null);
        $("#DestinationRemarks").attr("disabled", "disabled");
    }
    function checkDestinationIdForIsUseForEmptyTrue() {
        //影响“OutDepartmentTime”、“HandleNurse”、“DiagnosisName”
        $("#DivOutDepartmentTime").hide(10, null);
        $("#DivHandleNurse").hide(10, null);
        $("#DivDiagnosisName").hide(10, null);

        $("#OutDepartmentTime").attr("disabled", "disabled");
        $("#HandleNurse").attr("disabled", "disabled");
        $("#DiagnosisName").attr("disabled", "disabled");
    }
    function checkDestinationIdForIsUseForEmptyFalse() {
        //影响“OutDepartmentTime”、“HandleNurse”、“DiagnosisName”
        $("#DivOutDepartmentTime").show(10, null);
        $("#DivHandleNurse").show(10, null);
        $("#DivDiagnosisName").show(10, null);

        $("#OutDepartmentTime").removeAttr("disabled");
        $("#HandleNurse").removeAttr("disabled");
        $("#DiagnosisName").removeAttr("disabled");
    }
    function checkDestinationIdForIsTransferTrue() {
        //影响“TransferReasonId”、“TransferTarget”
        $("#DivTransferReasonId").show(10, null);
        $("#DivTransferTarget").show(10, null);

        $("#TransferReasonId").removeAttr("disabled");
        $("#TransferTarget").removeAttr("disabled");
    }
    function checkDestinationIdForIsTransferFalse() {
        //影响“TransferReasonId”、“TransferTarget”
        $("#DivTransferReasonId").hide(10, null);
        $("#DivTransferTarget").hide(10, null);

        $("#TransferReasonId").attr("disabled", "disabled");
        $("#TransferTarget").attr("disabled", "disabled");
    }
</script>